{
  "uid": "e7f64d57cf677d9e",
  "name": "test_add[fail_str4]",
  "fullName": "testcases.test_caclu.TestCalc#test_add",
  "historyId": "fdb06e25998b7aeb9216ce4951818a37",
  "time": {
    "start": 1612429349480,
    "stop": 1612429349480,
    "duration": 0
  },
  "status": "broken",
  "statusMessage": "TypeError: can only concatenate str (not \"int\") to str",
  "statusTrace": "self = <hogwarts_practices.python_calcu.testcases.test_caclu.TestCalc object at 0x000002432A2882E0>\na = '?', b = 1, expect = 0\n\n    @pytest.mark.parametrize(\n        \"a, b, expect\",\n        add_datas, ids=add_myid\n    )\n    @pytest.mark.add\n    def test_add(self, a, b, expect):\n        print(f\"a:{a}\")\n        # 实例化计算器类\n        # calc = Calculator()\n        # 定义一个变量接收add方法的返回值\n        # 调用相加方法\n>       result = self.calc.add(a, b)\n\ntestcases\\test_caclu.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <python_calcu.common.calc.Calculator object at 0x000002432A211D00>\na = '?', b = 1\n\n    def add(self, a, b):\n>       return a + b\nE       TypeError: can only concatenate str (not \"int\") to str\n\ncommon\\calc.py:12: TypeError",
  "flaky": false,
  "newFailed": false,
  "beforeStages": [
    {
      "name": "xunit_setup_class_fixture_TestCalc",
      "time": {
        "start": 1612429349378,
        "stop": 1612429349378,
        "duration": 0
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false,
      "stepsCount": 0
    }
  ],
  "afterStages": [
    {
      "name": "xunit_setup_class_fixture_TestCalc::0",
      "time": {
        "start": 1612429349526,
        "stop": 1612429349527,
        "duration": 1
      },
      "status": "passed",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "attachmentsCount": 0,
      "shouldDisplayMessage": false,
      "hasContent": false,
      "stepsCount": 0
    }
  ],
  "labels": [
    {
      "name": "tag",
      "value": "add"
    },
    {
      "name": "parentSuite",
      "value": "testcases"
    },
    {
      "name": "suite",
      "value": "test_caclu"
    },
    {
      "name": "subSuite",
      "value": "TestCalc"
    },
    {
      "name": "host",
      "value": "LAPTOP-G0VL8CLJ"
    },
    {
      "name": "thread",
      "value": "11380-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "testcases.test_caclu"
    },
    {
      "name": "resultFormat",
      "value": "allure2"
    }
  ],
  "parameters": [
    {
      "name": "a",
      "value": "'?'"
    },
    {
      "name": "b",
      "value": "1"
    },
    {
      "name": "expect",
      "value": "0"
    }
  ],
  "links": [],
  "hidden": false,
  "retry": false,
  "extra": {
    "severity": "normal",
    "retries": [],
    "categories": [
      {
        "name": "Test defects",
        "matchedStatuses": [],
        "flaky": false
      }
    ],
    "tags": [
      "add"
    ]
  },
  "source": "e7f64d57cf677d9e.json",
  "parameterValues": [
    "'?'",
    "1",
    "0"
  ]
}